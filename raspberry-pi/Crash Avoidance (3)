# type: ignore

import adafruit_mpu6050 
import board
import time
import busio
import digitalio
import displayio
from adafruit_display_text import label
import adafruit_displayio_ssd1306
import terminalio   
displayio.release_displays()

sda_pin = board.GP8
scl_pin = board.GP9
i2c = busio.I2C(scl_pin, sda_pin)
mpu = adafruit_mpu6050.MPU6050(i2c, address = 0x68)

display_bus = displayio.I2CDisplay(i2c, device_address = 0x3d, reset = board.GP4)
display = adafruit_displayio_ssd1306.SSD1306(display_bus, width=128, height=64)

led = digitalio.DigitalInOut(board.GP6)
led.direction = digitalio.Direction.OUTPUT


while True:
    accelerationVals = mpu.acceleration
    splash = displayio.Group()

    First = f"Angular Velocities`:"
    Second = f"x velocty: {round(angularVals[0], 3)}"  # round decimals to the 3rd decimal place
    Third = f"y velocity: {round(angularVals[1], 3)}"
    Fourth = f"z velocity: {round(angularVals[2], 3)}"

    Line_One = label.Label(terminalio.FONT, text=Second, color=0xFFFF00, x=5, y=5)
    splash.append(Line_One)
    Line_Two = label.Label(terminalio.FONT, text=Third, color=0xFFFF00, x=5, y=5)
    splash.append(Line_Two)
    Line_Three = label.Label(terminalio.FONT, text=Fourth, color=0xFFFF00, x=5, y=5)
    splash.append(Line_Three)

    display.show(splash)

    print(f"X acceleration: {accelerationVals[0]} m/s2") #print XYZ vals
    print(f"Y acceleration: {accelerationVals[1]} m/s2")
    print(f"Z acceleration: {accelerationVals[2]} m/s2")
    print("")
    time.sleep(.20)

    if accelerationVals[2] <= 1: # this tells me if the Z value changes to less than or equal to 1 then turn on the LED
        led.value = True
        
    else:
        led.value = False # led value false
